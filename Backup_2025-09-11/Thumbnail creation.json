{
  "createdAt": "2025-09-10T17:30:10.064Z",
  "updatedAt": "2025-09-10T19:55:02.179Z",
  "id": "KblZaWgyX2Hk0PLt",
  "name": "Thumbnail creation",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1ObWBBmct1XQcNqgpZCLW8iM9f8Z2bxYiOrpq58-X2Lc",
          "mode": "list",
          "cachedResultName": "Youtube Automation",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ObWBBmct1XQcNqgpZCLW8iM9f8Z2bxYiOrpq58-X2Lc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Time Flipped Long",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ObWBBmct1XQcNqgpZCLW8iM9f8Z2bxYiOrpq58-X2Lc/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Job Status",
              "lookupValue": "Completed"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -128,
        -96
      ],
      "id": "ae0fa64f-3734-4eec-93fc-cf50ead77f8a",
      "name": "Get row(s) in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "jwr2VJQX9ktvb4Sz",
          "name": "Zubair-1"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "807c739f-b4b7-41cb-92bf-7e8271e970ac",
              "leftValue": "={{ $json['Thumbnail Link'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            },
            {
              "id": "7505d681-ea99-40b4-8aa7-d648e561cf5a",
              "leftValue": "={{ $json['Final Video Link'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        64,
        -80
      ],
      "id": "be25f030-3638-48c3-8010-70e821c14ca7",
      "name": "If"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        272,
        -176
      ],
      "id": "1721c392-2693-4b5d-be4b-50c133e63aa5",
      "name": "Limit"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.together.xyz/v1/images/generations",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "black-forest-labs/FLUX.1-schnell-Free"
            },
            {
              "name": "prompt",
              "value": "={{ $json.output }}"
            },
            {
              "name": "steps",
              "value": "={{ 4 }}"
            },
            {
              "name": "n",
              "value": "={{ 1 }}"
            },
            {
              "name": "width",
              "value": "={{ 1280 }}"
            },
            {
              "name": "height",
              "value": "={{ 720 }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        912,
        -176
      ],
      "id": "a2866ff1-12fc-4b95-84d5-54e1642d57b8",
      "name": "Free Images",
      "retryOnFail": false,
      "waitBetweenTries": 5000,
      "maxTries": 2,
      "alwaysOutputData": false,
      "credentials": {
        "httpBearerAuth": {
          "id": "xNZtY56kIowFixlg",
          "name": "together Ai"
        },
        "httpHeaderAuth": {
          "id": "hBA1Z0mB998wxpr0",
          "name": "NCA ToolKit"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Series Title: {{ $json['Series Title'] }}\n\nVideo Title:{{ $json['Video Title'] }}\n\nPart No: {{ $json['Part No.'] }}\n\nPlatform: time-Flipped",
        "options": {
          "systemMessage": "=You are an Expert Thumbnail Prompt Generator AI agent.\n\nYour role is to convert the video title, optional episode number, and story context into a highly detailed, cinematic thumbnail prompt for an AI image generator (Flux Schnell, Stable Diffusion-like).\n\nInstructions:\n\nContext Awareness\n\nYou are given:\n\nThe video title (main focus).\n\nThe episode number (if provided).\n\nThe story/description (to enrich background details).\n\nThe title must always appear as title: \"<title>\" so the image generator understands it is text overlay.\n\nThe episode number (if provided) must appear as episode: \"EP <number>\" in a badge or corner text.\n\nThe background image should be self-explanatory, visually showing the essence of the story and title without needing extra words.\n\nDynamic Adaptation\n\nDo not use the same background style for every thumbnail.\n\nAdapt based on theme:\n\nTime, clocks, paradoxes â†’ glowing vortexes, shattered clocks, surreal sci-fi environments.\n\nSpace, astronomy â†’ galaxies, cosmic storms, nebulae, futuristic space stations.\n\nHumans, evolution, mystery â†’ DNA strands, human silhouettes, surreal symbolic art.\n\nMatch the tone of the story: mysterious, urgent, hopeful, dark, etc.\n\nImage Prompt Elements\nEvery generated thumbnail prompt must include:\n\nBackground Scene â†’ environment and objects that directly illustrate the title.\n\nCamera Angle â†’ cinematic wide shot, dramatic close-up, or aerial view.\n\nLighting â†’ glowing neon edges, dramatic cosmic light, or dark shadowed tones.\n\nStyle â†’ cinematic, futuristic, sci-fi, high contrast, ultra-detailed digital art.\n\nColors â†’ bold contrasting tones (e.g., neon blues, fiery oranges, deep blacks).\n\nText Overlay â†’\n\ntitle: \"<video title>\" in large, bold futuristic font, glowing with shadows for readability.\n\nepisode: \"EP <number>\" (only if provided), in small badge/corner text, techy font, high-contrast.\n\nInterpretive Visualization\n\nThe thumbnail must be immediately clear and clickable, even on small mobile screens.\n\nKeep the text short and powerful, avoid clutter.\n\nCombine literal + metaphorical visuals for mystery and attraction.\n\nAdd cinematic effects: dark vignette edges, glitch distortions, cosmic flares, sparks, etc.\n\nOutput Format\n\nReturn only the clean image prompt as plain text.\n\nNo JSON, no extra explanation, no formatting.\n\nInputs:\n\nTitle: {{ $json['Video Title'] }}\n\nEpisode: {{ $json['Part No.'] }}\n\nSeries Title: {{ $json['Series Title'] }}\n\nðŸ”‘ Example Output\n\nFor inputs:\n\nTitle: Your Time Machine Breaks\n\nEpisode: 1\n\nStory: A malfunctioning time machine sparks violently inside a collapsing vortex of time.\n\nðŸ‘‰ The generated thumbnail prompt should be:\n\nCinematic YouTube thumbnail, 1280x720 px, futuristic sci-fi, high contrast, dramatic.  \nBackground: A broken glowing time machine sparking violently inside a collapsing vortex of shattered clocks and storm clouds, neon-blue lightning illuminating fragments of gears and time fragments. Dark swirling mist creates mystery. Wide cinematic shot.  \nLighting: Neon blues and fiery oranges with strong glowing highlights and deep shadows.  \nStyle: Ultra-detailed digital art, cinematic, sci-fi, mysterious, professional.  \nColors: Neon blue, fiery orange, black cosmic void tones.  \nText Overlay: title: \"Your Time Machine Breaks\" â€” bold futuristic font, glowing with shadow, large and central.  \nEpisode: \"EP 1\" in a small high-contrast badge on the top corner, tech-style font.  \nStyling: Dark vignette edges, glitch distortions around the vortex, cosmic dust particles floating in air.  "
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        480,
        -176
      ],
      "id": "e1326d63-d933-4808-985f-bd7302432f21",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=Time Flipped",
        "tableName": "Time_Flipped_Automation_Chat",
        "contextWindowLength": 500
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        528,
        80
      ],
      "id": "94ae8eb8-c69a-4dcf-9693-777b5f59a6e9",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "nyI1LIk7TmRM1jfT",
          "name": "contabo Ztechai DB"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        352,
        32
      ],
      "id": "1d4a211b-329c-409e-8ebe-866a0272bce8",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "04L4BIAqVzDlgCrO",
          "name": "Gemini-4"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1ObWBBmct1XQcNqgpZCLW8iM9f8Z2bxYiOrpq58-X2Lc",
          "mode": "list",
          "cachedResultName": "Youtube Automation",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ObWBBmct1XQcNqgpZCLW8iM9f8Z2bxYiOrpq58-X2Lc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Time Flipped Long",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ObWBBmct1XQcNqgpZCLW8iM9f8Z2bxYiOrpq58-X2Lc/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Video Title": "={{ $('Limit').item.json['Video Title'] }}",
            "Thumbnail Link": "={{ $json.data[0].url }}"
          },
          "matchingColumns": [
            "Video Title"
          ],
          "schema": [
            {
              "id": "Series Title",
              "displayName": "Series Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Video Title",
              "displayName": "Video Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Next Video Title",
              "displayName": "Next Video Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Part No.",
              "displayName": "Part No.",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "length of Video Required",
              "displayName": "length of Video Required",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "length of each Section ",
              "displayName": "length of each Section ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Job Status",
              "displayName": "Job Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Final Video Link",
              "displayName": "Final Video Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Youtube Upload Status",
              "displayName": "Youtube Upload Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Concatination",
              "displayName": "Concatination",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Logo Status",
              "displayName": "Logo Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Background Music",
              "displayName": "Background Music",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Work Flow Start",
              "displayName": "Work Flow Start",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Thumbnail Link",
              "displayName": "Thumbnail Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        1120,
        -272
      ],
      "id": "737d2884-a84b-46ff-a40f-7c7d2e520ba5",
      "name": "Update row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "jwr2VJQX9ktvb4Sz",
          "name": "Zubair-1"
        }
      }
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -368,
        -112
      ],
      "id": "7e1d4246-cdae-45c1-aae5-c1b1ccfedd34",
      "name": "When Executed by Another Workflow"
    }
  ],
  "connections": {
    "Get row(s) in sheet": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Free Images",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Free Images": {
      "main": [
        [
          {
            "node": "Update row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "UUKqPWIjdYo6Togj"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "57dfc40f-a4ae-4073-94c4-774b2cc7981b",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-09-10T17:30:10.064Z",
      "updatedAt": "2025-09-10T17:30:10.064Z",
      "role": "workflow:owner",
      "workflowId": "KblZaWgyX2Hk0PLt",
      "projectId": "KyK2NGi92B9PeHQl"
    }
  ],
  "tags": []
}
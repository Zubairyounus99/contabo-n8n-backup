{
  "createdAt": "2025-09-14T07:55:37.298Z",
  "updatedAt": "2025-10-08T06:56:02.012Z",
  "id": "Vk9IOU3AH4fxdkE8",
  "name": "Life unfolded",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "13W-swlOmFzZlqa4VOftydy8TbGLpRkxE8rJgsJE0070",
          "mode": "list",
          "cachedResultName": "Life Unfolded",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/13W-swlOmFzZlqa4VOftydy8TbGLpRkxE8rJgsJE0070/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Life Unfolded long",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/13W-swlOmFzZlqa4VOftydy8TbGLpRkxE8rJgsJE0070/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -1808,
        436
      ],
      "id": "b863987e-66ef-41ef-bc6e-ef244711bf31",
      "name": "Get row(s) in sheet",
      "retryOnFail": true,
      "maxTries": 3,
      "waitBetweenTries": 5000,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "jwr2VJQX9ktvb4Sz",
          "name": "Zubair-1"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.scenes",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -448,
        436
      ],
      "id": "befb5450-e01e-4c21-999a-fc2f4745b59e",
      "name": "Create Table"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "88192cdb-0dec-4960-9a36-8d19874f1a97",
              "name": "scenes",
              "value": "={{ $json.scene_number }}",
              "type": "string"
            },
            {
              "id": "90cfd980-85b9-4f52-af26-1ab94f8a8ec1",
              "name": "narrations",
              "value": "={{ $json.narration }}",
              "type": "string"
            },
            {
              "id": "a3059d17-ffa7-42ea-9a86-b2973a705361",
              "name": "nca",
              "value": "http://173.212.233.128:8081",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        0,
        312
      ],
      "id": "caaefcde-a34c-4cd6-9b85-1725d457ab8c",
      "name": "Rename"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.together.xyz/v1/images/generations",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "black-forest-labs/FLUX.1-schnell-Free"
            },
            {
              "name": "prompt",
              "value": "={{ $json.output }}"
            },
            {
              "name": "steps",
              "value": "={{ 4 }}"
            },
            {
              "name": "n",
              "value": "={{ 1 }}"
            },
            {
              "name": "width",
              "value": "={{ 1280 }}"
            },
            {
              "name": "height",
              "value": "={{ 720 }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1472,
        312
      ],
      "id": "c84a8a96-9de1-432b-8f61-7dcd0eef370c",
      "name": "Free Images",
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "maxTries": 3,
      "alwaysOutputData": false,
      "credentials": {
        "httpBearerAuth": {
          "id": "xNZtY56kIowFixlg",
          "name": "together Ai"
        },
        "httpHeaderAuth": {
          "id": "hBA1Z0mB998wxpr0",
          "name": "NCA ToolKit"
        }
      }
    },
    {
      "parameters": {
        "operation": "upload",
        "bucketName": "nca-toolkit",
        "fileName": "=Raw%2F{{ $json.scenes }}.mp3",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.s3",
      "typeVersion": 1,
      "position": [
        448,
        312
      ],
      "id": "422b96eb-93b9-40ca-ba41-b106c40b66cf",
      "name": "Audio upload to MiniO1",
      "retryOnFail": false,
      "waitBetweenTries": 1000,
      "credentials": {
        "s3": {
          "id": "VSuDthoFjMjERe4Q",
          "name": "nca-Bucket"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "45f0b865-2cd7-4dc7-b329-631446d94f43",
              "name": "=audio",
              "value": "={{ \n  $('Rename').item.json.nca.trim().substring(0, $('Rename').item.json.nca.trim().lastIndexOf(':')) + \n  \":9000/nca-toolkit/\" + \n  encodeURIComponent(\"Raw/\" + $('Generate Voices from Kokoro TTS').item.json.scenes.trim()) + \n  \".mp3\"\n}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        672,
        312
      ],
      "id": "d1942f15-d2f7-4a85-9663-a8e77f955fe9",
      "name": "Get Audio Link"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Rename').item.json.nca }}/v1/media/metadata",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "thekey"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "media_url",
              "value": "={{ $json.audio }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        896,
        312
      ],
      "id": "1cc78d0c-34ff-4e50-9e42-2af4822472d0",
      "name": "metadata (Audio)",
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Rename').item.json.nca }}/v1/image/convert/video",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "thekey"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"image_url\": \"{{ $json.data[0].url }}\",\n  \"length\":  {{ $('metadata (Audio)').item.json.response.duration }},\n  \"frame_rate\": 24,\n  \"zoom_speed\": 3,\n  \"id\": \"request-123\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1696,
        312
      ],
      "id": "d3f99d52-1854-4aa1-8b4f-42edeaaf7457",
      "name": "Image to Video",
      "retryOnFail": true,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Rename').item.json.nca }}/v1/ffmpeg/compose",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "thekey"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"id\": \"merge-video-voiceover-youtube\",\n  \"inputs\": [\n    {\n      \"file_url\": \"{{ $json.response }}\"\n    },\n    {\n      \"file_url\": \"{{ $('Get Audio Link').item.json.audio }}\"\n    }\n  ],\n  \"filters\": [\n    {\n      \"filter\": \"[1:a]volume=2.0[boosted_audio]\"\n    },\n    {\n      \"filter\": \"[0:v]scale=iw*min(1920/iw\\\\,1080/ih):ih*min(1920/iw\\\\,1080/ih),pad=1920:1080:(1920-iw*min(1920/iw\\\\,1080/ih))/2:(1080-ih*min(1920/iw\\\\,1080/ih))/2[scaled_video]\"\n    },\n    {\n      \"filter\": \"[scaled_video][boosted_audio]concat=n=1:v=1:a=1[outv][outa]\"\n    }\n  ],\n  \"outputs\": [\n    {\n      \"options\": [\n        {\n          \"option\": \"-map\",\n          \"argument\": \"[outv]\"\n        },\n        {\n          \"option\": \"-map\",\n          \"argument\": \"[outa]\"\n        },\n        {\n          \"option\": \"-c:v\",\n          \"argument\": \"libx264\"\n        },\n        {\n          \"option\": \"-c:a\",\n          \"argument\": \"aac\"\n        }\n      ]\n    }\n  ],\n  \"metadata\": {\n    \"duration\": true,\n    \"filesize\": true\n  }\n}",
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2144,
        312
      ],
      "id": "3e371bf6-9081-4159-bb34-49e35e0dd0d6",
      "name": "Merge Audio and Video",
      "retryOnFail": true,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "response[0].file_url",
              "renameField": true,
              "outputFieldName": "videos"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        0,
        16
      ],
      "id": "970d2bfe-a464-4a70-8613-a49833cf3e3b",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "jsCode": "// Get array of URLs from previous node\nconst urls = items[0].json.videos;\n\n// Transform each URL into { video_url: \"<url>\" }\nconst wrapped = urls.map(url => ({ video_url: url }));\n\n// Return in the correct API format\nreturn [\n  {\n    json: {\n      video_urls: wrapped,\n      id: \"concat-job-001\"   // you can make this dynamic if you want\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        224,
        16
      ],
      "id": "c08fff4a-f010-4040-b230-958803559356",
      "name": "Create Array"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=http://173.212.233.128:8081/v1/video/concatenate",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json }}",
        "options": {
          "redirect": {
            "redirect": {}
          },
          "timeout": 900000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        448,
        16
      ],
      "id": "a05f8f0c-60fb-4e6b-9a9d-ee3cee7d4faf",
      "name": "Video Concatinate",
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "alwaysOutputData": false,
      "maxTries": 2,
      "credentials": {
        "httpHeaderAuth": {
          "id": "hBA1Z0mB998wxpr0",
          "name": "NCA ToolKit"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://173.212.233.128:8081/v1/ffmpeg/compose",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "=  {\n    \"id\": \"add-bg-music-youtube-landscape\",\n    \"inputs\": [\n      {\n        \"file_url\": \"{{ $('Logo').item.json.response[0].file_url }}\"\n      },\n      {\n        \"file_url\": \"http://173.212.233.128:9000/life-unfolded/Keys%20To%20Unravel%20-%20The%20Soundlings.mp3\"\n      }\n    ],\n    \"filters\": [\n      {\n        \"filter\": \"[0:v]scale=iw*min(1920/iw\\\\,1080/ih):ih*min(1920/iw\\\\,1080/ih),pad=1920:1080:(1920-iw*min(1920/iw\\\\,1080/ih))/2:(1080-ih*min(1920/iw\\\\,1080/ih))/2[v]\"\n      },\n      {\n        \"filter\": \"[1:a]aloop=loop=-1:size=2e+09,volume=0.05[bgm]\"\n      },\n      {\n        \"filter\": \"[0:a]volume=2.0[voice]\"\n      },\n      {\n        \"filter\": \"[voice][bgm]amix=inputs=2:duration=first:dropout_transition=3[a]\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"options\": [\n          { \"option\": \"-map\", \"argument\": \"[v]\" },\n          { \"option\": \"-map\", \"argument\": \"[a]\" },\n          { \"option\": \"-c:v\", \"argument\": \"libx264\" },\n          { \"option\": \"-c:a\", \"argument\": \"aac\" },\n          { \"option\": \"-shortest\" },\n          { \"option\": \"-f\", \"argument\": \"mp4\" }\n        ]\n      }\n    ],\n    \"metadata\": {\n      \"duration\": true,\n      \"filesize\": true,\n      \"bitrate\": true\n    }\n  }",
        "options": {
          "redirect": {
            "redirect": {}
          },
          "timeout": 3000000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1472,
        16
      ],
      "id": "d6ee5009-6a30-4a96-93ce-0336d993fbc5",
      "name": "Add Background Music",
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "maxTries": 2,
      "credentials": {
        "httpHeaderAuth": {
          "id": "hBA1Z0mB998wxpr0",
          "name": "NCA ToolKit"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://173.212.233.128:8880/v1/audio/speech",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "kokoro"
            },
            {
              "name": "input",
              "value": "={{ $json.narrations }}"
            },
            {
              "name": "voice",
              "value": "am_michael"
            },
            {
              "name": "speed",
              "value": "0.9"
            }
          ]
        },
        "options": {
          "timeout": 300000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        224,
        312
      ],
      "id": "7808b3fd-b736-45f5-b0fd-07418bc121c9",
      "name": "Generate Voices from Kokoro TTS",
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "alwaysOutputData": false,
      "maxTries": 3
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are expert in creating scenes and narrations.\nhere is the Transcription: {{ $json.Transcript }}",
        "hasOutputParser": true,
        "needsFallback": true,
        "messages": {
          "messageValues": [
            {
              "message": "=You are an Expert Scene Creator AI agent.  \n\nYour task is to transform a raw video transcript into short, well-structured narration scenes suitable for text-to-speech (TTS).  \n\n### Rules & Instructions:\n\n1. **Scene Splitting**  \n   - Break the transcript into narration scenes.  \n   - Each scene must contain between **{{ $json.Scenes_Length }}**.  \n   - Do not invent new content. Only correct grammar and split properly.  \n   - Ensure natural pacing: each scene should feel complete and meaningful.  \n\n2. **Grammar & Cleaning**  \n   - The transcript may contain branding like:  \n     - “Please subscribe to [Channel Name]”  \n     - “This story is from [Channel Name]”  \n     - Or any similar phrases.  \n   - Remove such branding and replace the channel/brand name with: **Life Unfolded**.  \n   - Fix grammar, punctuation, and sentence flow.  \n   - Add commas and full stops where needed.  \n   - Remove irrelevant text:  \n     - Newline characters (`\\n`)  \n     - Multiple dots (`..`, `...`)  \n     - Emotions or stage notes (`[laugh]`, `[sad]`, `[happy]`, etc.)  \n\n3. **Content Handling**  \n   - Keep story meaning intact.  \n   - Only adjust incorrect words if necessary (e.g., “cup” → “cub”).  \n   - Do not shorten important context.  \n   - Make narration **TTS-friendly** (no abrupt cuts, natural pacing, complete sentences).  \n\n4. **Output Format**  \n   - Return the result as JSON with ordered scenes.  \n   - Each scene should include:  \n     - `scene_number` (starting from 1)  \n     - `narration` (cleaned, corrected, and narration-ready text)  \n\n### Example  \n**Input:**  \n\n\"once upon a time a lioness gave birth to\\na cup in the jungle immediately after\\ngiving birth the Lioness died at that\\nvery moment a flock of sheep was passing\\nby the newborn lion cub confused and\\nalone joined the sheep and started\\nwalking with them living with the Sheep\\nthe Cub began to act just like them it\\nnever ate meat\"  \n\n**Output:**  \n\n```json\n{\n  \"scenes\": [\n    {\n      \"scene_number\": 1,\n      \"narration\": \"Once upon a time, a lioness gave birth to a cub in the jungle.\"\n    },\n    {\n      \"scene_number\": 2,\n      \"narration\": \"Immediately after giving birth, the Lioness died at that very moment.\"\n    },\n    {\n      \"scene_number\": 3,\n      \"narration\": \"A flock of sheep was passing by, the newborn lion cub confused and alone.\"\n    },\n    {\n      \"scene_number\": 4,\n      \"narration\": \"He joined the sheep and started walking with them, living among the herd.\"\n    },\n    {\n      \"scene_number\": 5,\n      \"narration\": \"The cub began to act just like them, and he never ate meat.\"\n    }\n  ]\n}\n\n\nTranscript: {{ $json.Transcript }}"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        -856,
        436
      ],
      "id": "84377703-35e7-4052-8592-b5dc35e5f704",
      "name": "Scenes Creation"
    },
    {
      "parameters": {
        "amount": 20
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2368,
        560
      ],
      "id": "f647deed-49a2-4d1d-a1c3-fef6885cc803",
      "name": "Wait",
      "webhookId": "686f0839-9f4f-4d31-9a5c-5b7f76800da1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://173.212.233.128:8081/v1/video/caption",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"video_url\": \"{{ $json.file_url }}\",\n  \"settings\": {\n    \"style\": \"highlight\",\n    \"line_color\": \"#FFFFFF\",\n    \"word_color\": \"#FFFF00\",\n    \"outline_color\": \"#000000\",\n    \"all_caps\": true,\n    \"max_words_per_line\": 4,\n    \"position\": \"bottom_center\",\n    \"alignment\": \"center\",\n    \"font_family\": \"DejaVu Sans\",\n    \"font_size\": 60,\n    \"bold\": true,\n    \"italic\": true,\n    \"underline\": false,\n    \"strikeout\": false,\n    \"outline_width\": 2,\n    \"spacing\": 1,\n    \"angle\": 0,\n    \"shadow_offset\": 2\n  },\n  \"replace\": [\n    { \"find\": \"um\", \"replace\": \"\" },\n    { \"find\": \"...\", \"replace\": \"\" },\n    { \"find\": \"like\", \"replace\": \"\" }\n  ],\n  \"id\": \"job-caption-001\",\n  \"language\": \"en\"\n}\n",
        "options": {
          "timeout": 15000000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3264,
        160
      ],
      "id": "35eb1125-716b-4566-9382-75ace70e8930",
      "name": "add Captions",
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "maxTries": 2,
      "credentials": {
        "httpHeaderAuth": {
          "id": "hBA1Z0mB998wxpr0",
          "name": "NCA ToolKit"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "zubairyounus99@gmail.com",
        "subject": "={{ $('Video Details').item.json['Video Title'] }}-Generation Completed",
        "emailType": "text",
        "message": "=Hi Zubair,\n\nyour video titled \"{{ $('Video Details').item.json['Video Title'] }}\" for the Channel \"Life Unfolded\" generation is completed.\n\n\nhere is the link of Complete video in all respects:\n{{ $json.response }}\n\nother Links are also below:\n\nwithout Captions and after adding background Music:\n{{ $('Add Background Music').item.json.response[0].file_url }}\n\nhere is the Raw Video:\n{{ $('Video Concatinate').item.json.response }}\n\nThanks,\nZubair",
        "options": {
          "appendAttribution": true
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        3936,
        64
      ],
      "id": "c0f3892e-899f-486c-ab44-1e49fec6f68f",
      "name": "Send Completion Mesage.",
      "webhookId": "b66298ad-d879-40e4-8ed0-847b61216bc1",
      "credentials": {
        "gmailOAuth2": {
          "id": "7qT7qFwOWnIR3zCg",
          "name": "zubairyounOus"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an amazing image prompt generator and you are given \nNarration:  {{ $('Rename').item.json.narrations }}",
        "options": {
          "systemMessage": "=You are an Expert Image Prompt Generator AI agent.  \n\nYour role is to convert narration text into highly detailed, imaginative prompts for Flux Schnell (Stable Diffusion-like) image generation.  \n\n### Instructions:\n\n1. **Context Awareness**  \n   - Input sources:  \n     - Narration → {{ $('Rename').item.json.narrations }}\n     - Style (optional) →  {{ $('Video Details').item.json['image style'] }}\n   - Narration is the **core focus** of the image.  \n   - If a style is given, **strictly apply it**. Example: “digital painting, semi-realistic illustration, soft warm tones, cinematic composition, no text overlay.”  \n   - If no style is given, infer the best one from narration + title (cosmic, cinematic, natural, surreal, realistic, etc.).  \n   - Ensure visual **consistency across multiple scenes** while keeping narrative flow.  \n\n2. **Prompt Construction**  \n   Every generated prompt must include:  \n   - **Camera angle & shot type** (close-up, closed shot, wide cinematic, aerial, macro, etc.)  \n   - **Environment details** (village, stars, forest, cityscape, abstract void, etc.)  \n   - **Lighting** (golden hour sunlight, dramatic shadows, neon futuristic, cosmic glow, etc.)  \n   - **Art style** (either {{ $('Video Details').item.json['image style'] }} OR inferred best match like cinematic photography, digital painting, surreal concept art, etc.)  \n   - **Color mood** (warm earth tones, vivid galaxy colors, cold futuristic blues, monochrome, etc.)  \n\n3. **Interpretive Visualization**  \n   - Do NOT include narration text directly.  \n   - Translate narration into a **visual storytelling scene** (literal or symbolic).  \n   - Example: narration about “an old man reflecting before entering a village” → *A digital painting, semi-realistic illustration in soft warm tones, depicting an elderly man sitting under a tree, looking toward a peaceful village in the distance. Closed shot framing, cinematic composition, warm golden light, storytelling atmosphere, no text overlay.*  \n\n4. **Output**  \n   - Return only the **final image prompt** as plain text.  \n   - No JSON, no explanation, no extra formatting.  \n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1120,
        312
      ],
      "id": "c11b3b76-e53b-4af1-bc05-c679d8442582",
      "name": "Image Prompt generator"
    },
    {
      "parameters": {
        "jsCode": "// Get array of URLs from previous node\nconst urls = items[0].json.videos;\n\n// Transform each URL into { video_url: \"<url>\" }\nconst wrapped = urls.map(url => ({ video_url: url }));\n\n// Return in the correct API format\nreturn [\n  {\n    json: {\n      video_urls: wrapped,\n      id: \"concat-job-002\"   // you can make this dynamic if you want\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3488,
        -32
      ],
      "id": "08374d0c-c654-414f-8811-8ce514fc4fd6",
      "name": "Create Array1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        3040,
        16
      ],
      "id": "979cc2b9-50bc-46f3-af21-0ae8f8596f4d",
      "name": "Loop Over Items2",
      "retryOnFail": true,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://173.212.233.128:8081/v1/media/metadata",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"media_url\":\"{{ $('Add Background Music').item.json.response[0].file_url }}\"\n}",
        "options": {
          "timeout": 1500000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2144,
        16
      ],
      "id": "09d6a1fe-39e9-4116-bef6-3b224fbb966d",
      "name": "metadata",
      "retryOnFail": false,
      "maxTries": 2,
      "waitBetweenTries": 5000,
      "credentials": {
        "httpHeaderAuth": {
          "id": "hBA1Z0mB998wxpr0",
          "name": "NCA ToolKit"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=http://173.212.233.128:8081/v1/video/split",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"video_url\": \"{{ $('Add Background Music').item.json.response[0].file_url }}\",\n  \"splits\": [\n    {\n      \"start\": \"00:00:00\",\n      \"end\": \"00:02:00\"\n    },\n    {\n      \"start\": \"00:02:00\",\n      \"end\": \"00:04:00\"\n    },\n    {\n      \"start\": \"00:04:00\",\n      \"end\": \"00:06:00\"\n    },\n    {\n      \"start\": \"00:06:00\",\n      \"end\": \"00:08:00\"\n    },\n    {\n      \"start\": \"00:08:0\",\n      \"end\": \"00:10:00\"\n    },\n    {\n      \"start\": \"00:10:00\",\n      \"end\": \"00:12:00\"\n    },\n    {\n      \"start\": \"00:12:00\",\n      \"end\": \"00:14:00\"\n    },\n    {\n      \"start\": \"00:14:0\",\n      \"end\": \"00:16:00\"\n    },\n    {\n      \"start\": \"00:16:00\",\n      \"end\": \"00:18:00\"\n    },\n    {\n      \"start\": \"00:18:0\",\n      \"end\": \"00:20:00\"\n    },\n    {\n      \"start\": \"00:20:00\",\n      \"end\": \"00:22:00\"\n    }\n  ]\n}",
        "options": {
          "timeout": 3000000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2592,
        16
      ],
      "id": "6029ef4f-aaee-4c2f-8f19-89cd7b873698",
      "name": "generate_splits",
      "retryOnFail": true,
      "maxTries": 3,
      "waitBetweenTries": 5000,
      "credentials": {
        "httpHeaderAuth": {
          "id": "hBA1Z0mB998wxpr0",
          "name": "NCA ToolKit"
        }
      }
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "response",
              "renameField": true,
              "outputFieldName": "videos"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        3264,
        -32
      ],
      "id": "d06f6bcf-cd67-487b-850f-c8cc28ee0d71",
      "name": "Aggregate1"
    },
    {
      "parameters": {
        "amount": 20
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        672,
        16
      ],
      "id": "2cc3683c-f2af-4131-9631-dbfb3d090713",
      "name": "Wait1",
      "webhookId": "c9a235c1-505a-47c5-8f06-a7bdf81617f3"
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1920,
        16
      ],
      "id": "dca1215c-8464-4340-9b7a-43d9e70384bf",
      "name": "Wait6",
      "webhookId": "03ad9a54-cdd0-4c46-bc54-078de2cecdbb"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "13W-swlOmFzZlqa4VOftydy8TbGLpRkxE8rJgsJE0070",
          "mode": "list",
          "cachedResultName": "Life Unfolded",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/13W-swlOmFzZlqa4VOftydy8TbGLpRkxE8rJgsJE0070/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Life Unfolded long",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/13W-swlOmFzZlqa4VOftydy8TbGLpRkxE8rJgsJE0070/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Video Title": "={{ $('Video Details').item.json['Video Title'] }}",
            "Final Video Link": "={{ $json.response }}",
            "Job Status": "Completed"
          },
          "matchingColumns": [
            "Video Title"
          ],
          "schema": [
            {
              "id": "Channel Name",
              "displayName": "Channel Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Video Title",
              "displayName": "Video Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Transcript",
              "displayName": "Transcript",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Video Length",
              "displayName": "Video Length",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Description",
              "displayName": "Description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Video Link",
              "displayName": "Video Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Job Status",
              "displayName": "Job Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Final Video Link",
              "displayName": "Final Video Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Youtube Upload Status",
              "displayName": "Youtube Upload Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Script Mode",
              "displayName": "Script Mode",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Thumbnail Prompt",
              "displayName": "Thumbnail Prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Thumbnail Link",
              "displayName": "Thumbnail Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Script",
              "displayName": "Script",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        3936,
        -128
      ],
      "id": "828ef641-3ecb-44bb-bd45-09743688d293",
      "name": "Update Complete Status",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "jwr2VJQX9ktvb4Sz",
          "name": "Zubair-1"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=http://173.212.233.128:8081/v1/video/concatenate",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json }}",
        "options": {
          "redirect": {
            "redirect": {}
          },
          "timeout": 3000000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3712,
        -32
      ],
      "id": "de2e5e23-e079-47b8-ad8e-66be70e19672",
      "name": "Complete Video",
      "retryOnFail": false,
      "waitBetweenTries": 5000,
      "alwaysOutputData": false,
      "credentials": {
        "httpHeaderAuth": {
          "id": "hBA1Z0mB998wxpr0",
          "name": "NCA ToolKit"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -1360,
        436
      ],
      "id": "63ae4f5d-c93a-4ada-a4e4-42b1b7f7c263",
      "name": "Limit to 1"
    },
    {
      "parameters": {
        "amount": 15
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2368,
        16
      ],
      "id": "b5b15f36-f614-4da0-8869-002c4177deb2",
      "name": "Wait9",
      "webhookId": "156d688a-05c7-426e-a2dd-2e7791170a74"
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1920,
        312
      ],
      "id": "154b634e-882b-4f65-b3e0-5a9d2edeacd6",
      "name": "Wait2",
      "webhookId": "f830ecba-9d57-4d89-b400-9a0f4046e989"
    },
    {
      "parameters": {
        "model": "nvidia/nemotron-nano-9b-v2:free",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        1128,
        536
      ],
      "id": "f55386d2-ad22-4fa9-9d28-e8c9cd5eaf63",
      "name": "OpenRouter Chat Model1",
      "credentials": {
        "openRouterApi": {
          "id": "65mlukvVZpheBc3O",
          "name": "new openrouter key"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"scenes\": [\n    {\n      \"scene_number\": 1,\n      \"narration\": \"Your text here\"\n    }\n  ]\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        -656,
        660
      ],
      "id": "c977b85f-e68b-49b7-b12d-fad1cc99b831",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -224,
        436
      ],
      "id": "a00dc763-70fb-4870-b0cf-f2bfbcfb36c0",
      "name": "Loop Over Items1",
      "retryOnFail": true,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "fieldToSplitOut": "response",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        2816,
        16
      ],
      "id": "c8e5fa71-464b-4af2-bb31-c9f04646f3de",
      "name": "Split Out1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -2032,
        244
      ],
      "id": "76378b28-2b28-4cd6-a359-c9d9d21b5fb8",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4815bca6-0240-4c78-8874-857fd4fd615e",
              "leftValue": "={{ $json['Job Status'] }}",
              "rightValue": "Completed",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1584,
        436
      ],
      "id": "603b03ef-1f40-4367-bb82-25520515ced4",
      "name": "If"
    },
    {
      "parameters": {
        "model": "deepseek/deepseek-chat-v3.1:free",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -912,
        660
      ],
      "id": "abd9ad00-9fe5-40a2-aa57-ac704d502072",
      "name": "Deepseek-r1",
      "credentials": {
        "openRouterApi": {
          "id": "65mlukvVZpheBc3O",
          "name": "new openrouter key"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-nano",
          "mode": "list",
          "cachedResultName": "gpt-4.1-nano"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -784,
        660
      ],
      "id": "a7445e86-5445-43b2-847b-a404538a4280",
      "name": "Open AI Paid",
      "credentials": {
        "openAiApi": {
          "id": "mfO0dqgKTdN60Ofd",
          "name": "zubair-1 Paid"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "001f6d66-2202-48c7-8c4e-c3bfffdef0ea",
              "name": "Video Title",
              "value": "={{ $json['Video Title'] }}",
              "type": "string"
            },
            {
              "id": "3d56dea8-494d-450f-a9fd-b18c5fa8a371",
              "name": "image style",
              "value": "={{ $json['Image Style'] }}",
              "type": "string"
            },
            {
              "id": "f9fce6dd-4be0-4d2d-90a0-c8d8fdaab66a",
              "name": "Transcript",
              "value": "={{ $json.Transcript }}",
              "type": "string"
            },
            {
              "id": "1bfaf8aa-d0c5-4ca8-85b0-e279f55dc551",
              "name": "Scenes_Length",
              "value": "={{ $json['Scenes Length'] }}",
              "type": "string"
            },
            {
              "id": "d4789c6d-6fbd-40f0-97bb-2a187a402863",
              "name": "Channel Name",
              "value": "={{ $json['Channel Name'] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1136,
        436
      ],
      "id": "2cb658e0-a19c-45ad-b62a-a21168cccde5",
      "name": "Video Details"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Video Details').item.json['Video Title'] }}",
        "tableName": "Life_Unfolded_Chat_History",
        "contextWindowLength": 4
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        1256,
        536
      ],
      "id": "2f34cacd-76c3-4cd6-bd8b-834dd5b2146e",
      "name": "Life Unfolded Chat Memory",
      "credentials": {
        "postgres": {
          "id": "nyI1LIk7TmRM1jfT",
          "name": "contabo Ztechai DB"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://173.212.233.128:8081//v1/ffmpeg/compose",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"inputs\": [\n    {\n      \"file_url\": \"{{ $('Video Concatinate').item.json.response }}\"\n    },\n    {\n      \"file_url\": \"http://173.212.233.128:9000/life-unfolded/Life%20unfolded%20Logo%20Animation.mp4\",\n      \"options\": [\n        { \"option\": \"-stream_loop\", \"argument\": \"-1\" }\n      ]\n    },\n    {\n      \"file_url\": \"http://173.212.233.128:9000/life-unfolded/Life%20Unfolded%20Logo-without%20background-cropped.png\"\n    }\n  ],\n  \"filters\": [\n    {\n      \"filter\": \"[1:v]colorkey=0xFFFFFF:0.3:0.1[ckout];[ckout]scale=250:150[subscribe];[2:v]scale=200:200,format=rgba,colorchannelmixer=aa=0.5[logo];[0:v][subscribe]overlay=W-w-20:20:shortest=1[tmp];[tmp][logo]overlay=50:50[outv]\"\n    }\n  ],\n  \"outputs\": [\n    {\n      \"options\": [\n        { \"option\": \"-map\", \"argument\": \"[outv]\" },\n        { \"option\": \"-map\", \"argument\": \"0:a\" },\n        { \"option\": \"-c:v\", \"argument\": \"libx264\" },\n        { \"option\": \"-c:a\", \"argument\": \"aac\" }\n      ]\n    }\n  ],\n  \"metadata\": {\n    \"filesize\": true,\n    \"duration\": true,\n    \"bitrate\": true\n  },\n  \"id\": \"subscribe-logo-overlay-loop\"\n}\n",
        "options": {
          "timeout": 3000000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        896,
        16
      ],
      "id": "a8b4a854-e6db-4deb-925a-a2360ff5907f",
      "name": "Logo",
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "maxTries": 2,
      "credentials": {
        "httpHeaderAuth": {
          "id": "hBA1Z0mB998wxpr0",
          "name": "NCA ToolKit"
        }
      }
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1184,
        16
      ],
      "id": "bfdc872b-d75c-47c2-a7ef-729ddb694147",
      "name": "Wait3",
      "webhookId": "9e069669-849a-4eb8-8843-86254a12dcac"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "13W-swlOmFzZlqa4VOftydy8TbGLpRkxE8rJgsJE0070",
          "mode": "list",
          "cachedResultName": "Life Unfolded",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/13W-swlOmFzZlqa4VOftydy8TbGLpRkxE8rJgsJE0070/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Life Unfolded long",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/13W-swlOmFzZlqa4VOftydy8TbGLpRkxE8rJgsJE0070/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Video Title": "={{ $('Video Details').item.json['Video Title'] }}",
            "Final Video Link": "=",
            "Music Added Link": "={{ $json.response[0].file_url }}",
            "Logod Link": "={{ $('Logo').item.json.response[0].file_url }}",
            "Concatinated Link": "={{ $('Video Concatinate').item.json.response }}"
          },
          "matchingColumns": [
            "Video Title"
          ],
          "schema": [
            {
              "id": "Channel Name",
              "displayName": "Channel Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Video Title",
              "displayName": "Video Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Transcript",
              "displayName": "Transcript",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Video Length",
              "displayName": "Video Length",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Scenes Length",
              "displayName": "Scenes Length",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Description",
              "displayName": "Description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Video Link",
              "displayName": "Video Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Job Status",
              "displayName": "Job Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Final Video Link",
              "displayName": "Final Video Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Youtube Upload Status",
              "displayName": "Youtube Upload Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Concatinated Link",
              "displayName": "Concatinated Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Logod Link",
              "displayName": "Logod Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Music Added Link",
              "displayName": "Music Added Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Script Mode",
              "displayName": "Script Mode",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Thumbnail Prompt",
              "displayName": "Thumbnail Prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Thumbnail Link",
              "displayName": "Thumbnail Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Script",
              "displayName": "Script",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        1696,
        16
      ],
      "id": "546598ea-3927-492b-9db5-73964c9f2418",
      "name": "Add parts details",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "jwr2VJQX9ktvb4Sz",
          "name": "Zubair-1"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "dRXsQCE72G2v6e3A",
          "mode": "list",
          "cachedResultName": "Upload Life unfolded long"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        3936,
        256
      ],
      "id": "49863c67-daf0-4797-9323-9c26dc8667a3",
      "name": "Execute Workflow"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtMinute": 15
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -2032,
        436
      ],
      "id": "1942a55f-b513-4061-8096-b71906d2e7be",
      "name": "Schedule Trigger"
    }
  ],
  "connections": {
    "Get row(s) in sheet": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Table": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rename": {
      "main": [
        [
          {
            "node": "Generate Voices from Kokoro TTS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audio upload to MiniO1": {
      "main": [
        [
          {
            "node": "Get Audio Link",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Audio Link": {
      "main": [
        [
          {
            "node": "metadata (Audio)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "metadata (Audio)": {
      "main": [
        [
          {
            "node": "Image Prompt generator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Free Images": {
      "main": [
        [
          {
            "node": "Image to Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Image to Video": {
      "main": [
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Audio and Video": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Create Array",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Array": {
      "main": [
        [
          {
            "node": "Video Concatinate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Video Concatinate": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add Background Music": {
      "main": [
        [
          {
            "node": "Add parts details",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Voices from Kokoro TTS": {
      "main": [
        [
          {
            "node": "Audio upload to MiniO1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scenes Creation": {
      "main": [
        [
          {
            "node": "Create Table",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "add Captions": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Image Prompt generator": {
      "main": [
        [
          {
            "node": "Free Images",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Array1": {
      "main": [
        [
          {
            "node": "Complete Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items2": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "add Captions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "metadata": {
      "main": [
        [
          {
            "node": "Wait9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "generate_splits": {
      "main": [
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate1": {
      "main": [
        [
          {
            "node": "Create Array1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Logo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait6": {
      "main": [
        [
          {
            "node": "metadata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Complete Video": {
      "main": [
        [
          {
            "node": "Update Complete Status",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send Completion Mesage.",
            "type": "main",
            "index": 0
          },
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit to 1": {
      "main": [
        [
          {
            "node": "Video Details",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait9": {
      "main": [
        [
          {
            "node": "generate_splits",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Merge Audio and Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Image Prompt generator",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "Scenes Creation",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Rename",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [],
        [
          {
            "node": "Limit to 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deepseek-r1": {
      "ai_languageModel": [
        [
          {
            "node": "Scenes Creation",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Open AI Paid": {
      "ai_languageModel": [
        [
          {
            "node": "Scenes Creation",
            "type": "ai_languageModel",
            "index": 1
          }
        ]
      ]
    },
    "Video Details": {
      "main": [
        [
          {
            "node": "Scenes Creation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Life Unfolded Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Image Prompt generator",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Logo": {
      "main": [
        [
          {
            "node": "Wait3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait3": {
      "main": [
        [
          {
            "node": "Add Background Music",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add parts details": {
      "main": [
        [
          {
            "node": "Wait6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "timeSavedPerExecution": 240,
    "errorWorkflow": "UUKqPWIjdYo6Togj"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "66e163cd-2e75-4276-bcc2-e12c61115df8",
  "triggerCount": 1,
  "shared": [
    {
      "createdAt": "2025-09-14T07:55:37.298Z",
      "updatedAt": "2025-09-14T07:55:37.298Z",
      "role": "workflow:owner",
      "workflowId": "Vk9IOU3AH4fxdkE8",
      "projectId": "KyK2NGi92B9PeHQl"
    }
  ],
  "tags": [
    {
      "createdAt": "2025-09-08T06:06:20.811Z",
      "updatedAt": "2025-09-08T06:06:20.811Z",
      "id": "RNWde51of0nnQzPD",
      "name": "Video Automation"
    }
  ]
}
{
  "createdAt": "2025-09-10T17:02:17.804Z",
  "updatedAt": "2025-09-26T08:22:20.000Z",
  "id": "gB8NWpoCuOW6kiCe",
  "name": "Lead Generation System: Google Maps to Email Scraper with Google Sheets Export",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "content": "## 🗺️ STEP 1: Google Maps Data Extraction\n\nThis workflow starts by scraping Google Maps for business listings:\n\n**Process:** Uses HTTP requests to search Google Maps with queries like \"Calgary dentists\"\n**Output:** Raw HTML containing business listings and website URLs\n**Key:** No APIs required - direct HTML scraping\n\n**Note:** Replace search URL with your target location and business type",
        "height": 180,
        "width": 350
      },
      "id": "977c3bfa-2223-4132-bad6-99fa6fadd204",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1936,
        -64
      ],
      "typeVersion": 1,
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## 🔗 STEP 2: Website URL Processing\n\nExtracts and cleans business website URLs:\n\n1. **Extract URLs:** JavaScript regex finds all website URLs in Google Maps data\n2. **Filter Google URLs:** Removes irrelevant domains (google.com, gstatic, etc.)\n3. **Remove Duplicates:** Eliminates duplicate websites\n4. **Limit:** Controls batch size for testing (adjust for production)\n\n**Result:** Clean list of actual business websites ready for email extraction",
        "height": 200,
        "width": 380
      },
      "id": "445a3813-733a-4f36-93b0-a9ae5a8158dc",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1616,
        -96
      ],
      "typeVersion": 1,
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## 🔄 STEP 3: Smart Website Scraping\n\nProcesses each website individually to prevent IP blocking:\n\n**Loop Over Items:** Processes websites one by one with built-in delays\n**Scrape Site:** Downloads HTML content from each business website\n**Wait Nodes:** Prevent rate limiting and IP blocking\n**Error Handling:** Continues processing even if some sites fail\n\n**Critical:** The batching and delays are essential for reliable operation at scale",
        "height": 200,
        "width": 380
      },
      "id": "7e877fee-5ab6-45d6-bd79-ab4537e16ca1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -576,
        -64
      ],
      "typeVersion": 1,
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## 📧 STEP 4: Email Extraction & Export\n\nFinal processing pipeline:\n\n1. **Extract Emails:** JavaScript regex finds all email addresses in website HTML\n2. **Filter Out Empties:** Removes websites with no emails found\n3. **Split Out:** Converts email arrays into individual items\n4. **Remove Duplicates:** Final deduplication across all sources\n5. **Add to Sheet:** Exports clean email list to Google Sheets\n\n**Result:** Organized database of business emails ready for outreach",
        "height": 220,
        "width": 400
      },
      "id": "144fb3fe-0410-4d1a-86c7-96588589e5a3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -176,
        -80
      ],
      "typeVersion": 1,
      "name": "Sticky Note3"
    },
    {
      "parameters": {},
      "id": "effb1f10-cbb0-4cb6-888d-a56684f9529d",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -2256,
        880
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "3b827ff8-af58-45db-b439-38843ebc1644",
      "name": "Remove Duplicates",
      "type": "n8n-nodes-base.removeDuplicates",
      "position": [
        -688,
        880
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "63e4424a-ea5f-466b-a7ec-d13886473a97",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        -240,
        880
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "amount": 1
      },
      "id": "89f5559d-86a0-4478-9405-e689a9eda218",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "position": [
        208,
        864
      ],
      "webhookId": "19cc6ed4-4fe7-485b-b879-c679e4b3374d",
      "typeVersion": 1.1
    },
    {
      "parameters": {},
      "id": "4f20d4a4-3828-43d4-b98c-52acd959803a",
      "name": "Wait1",
      "type": "n8n-nodes-base.wait",
      "position": [
        -16,
        624
      ],
      "webhookId": "0fe34756-6e43-4603-8891-5747a9a6500a",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "jsCode": "const input = $input.first().json.data\nconst regex = /https?:\\/\\/[^\\/\\s\"'>]+/g\nconst websites = input.match(regex)\nreturn websites.map(website => ({json:{website}}))"
      },
      "id": "2796e21e-300c-4348-823f-3f6f753f6535",
      "name": "Extract URLs",
      "type": "n8n-nodes-base.code",
      "position": [
        -1136,
        880
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "url": "=https://www.google.com/maps/search/{{ $json['Keywords Search'] }}",
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "id": "b5089c24-c557-4804-8622-28f6f6364697",
      "name": "Scrape Google Maps",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1360,
        880
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "a6786c58-424a-409a-b87f-8a7592cb7944",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              },
              "leftValue": "={{ $json.output.Website }}",
              "rightValue": ""
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "5b93cec5-5114-42e8-ba5f-43163c0bd212",
      "name": "Filter Out Empties",
      "type": "n8n-nodes-base.filter",
      "position": [
        208,
        624
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "bf0a5053-9660-457c-9581-964793bb6d7d",
              "operator": {
                "type": "string",
                "operation": "notContains"
              },
              "leftValue": "={{ $json.website }}",
              "rightValue": "schema"
            },
            {
              "id": "9110b9e0-12aa-45cc-bde0-9eda8c10970e",
              "operator": {
                "type": "string",
                "operation": "notContains"
              },
              "leftValue": "={{ $json.website }}",
              "rightValue": "google"
            },
            {
              "id": "fb9b6ed6-96a5-4560-ab10-b8a4b9a61a2b",
              "operator": {
                "type": "string",
                "operation": "notContains"
              },
              "leftValue": "={{ $json.website }}",
              "rightValue": "gg"
            },
            {
              "id": "10500c0b-cdbd-4816-aba3-df60d69845dc",
              "operator": {
                "type": "string",
                "operation": "notContains"
              },
              "leftValue": "={{ $json.website }}",
              "rightValue": "gstatic"
            }
          ]
        },
        "options": {}
      },
      "id": "5394e894-4526-46c0-b505-031e227140af",
      "name": "Filter Google URLs",
      "type": "n8n-nodes-base.filter",
      "position": [
        -912,
        880
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "3eb5e5b3-1a71-4aec-9c21-3ee908f88ec7",
      "name": "Remove Duplicates (2)",
      "type": "n8n-nodes-base.removeDuplicates",
      "position": [
        464,
        624
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1kGgxT5YwE7vE8yOHbpiJKzxvD0lGYS-Cq7g4mzeLwjY",
          "mode": "list",
          "cachedResultName": "ZTechAI",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1kGgxT5YwE7vE8yOHbpiJKzxvD0lGYS-Cq7g4mzeLwjY/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1876557965,
          "mode": "list",
          "cachedResultName": "Raw Leads",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1kGgxT5YwE7vE8yOHbpiJKzxvD0lGYS-Cq7g4mzeLwjY/edit#gid=1876557965"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Website": "={{ $json.output.website }}",
            "Email": "={{ $json.output['business Email'] }}",
            "Phone Number": "={{ $json.output['Phone Number'] }}",
            "location": "={{ $json.output['Business Location'] }}",
            "Business Type": "={{ $json.output['Type of Business'] }}",
            "chatbot": "={{ $json.output.Chatbot }}",
            "Appointment setter": "={{ $json.output['Appointment Setter'] }}",
            "Main Field": "={{ $json.output['business Email'] }}",
            "Sub field": "={{ $json.output['Sub field'] }}",
            "Keyword Searched": "={{ $('Get row(s) in sheet').item.json['Keywords Search'] }}"
          },
          "matchingColumns": [
            "Website"
          ],
          "schema": [
            {
              "id": "Website",
              "displayName": "Website",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Phone Number",
              "displayName": "Phone Number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "location",
              "displayName": "location",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Business Type",
              "displayName": "Business Type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "chatbot",
              "displayName": "chatbot",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Appointment setter",
              "displayName": "Appointment setter",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Main Field",
              "displayName": "Main Field",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Sub field",
              "displayName": "Sub field",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Keyword Searched",
              "displayName": "Keyword Searched",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {
          "useAppend": false
        }
      },
      "id": "c6fa4230-cd49-4bd3-b893-f4acc8378f12",
      "name": "Add to Sheet (or whatever you want!)",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        992,
        624
      ],
      "typeVersion": 4.5,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "jwr2VJQX9ktvb4Sz",
          "name": "Zubair-1"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://production-sfo.browserless.io/chromium/bql",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"query\": \"mutation Screenshot($url: String!) { goto(url: $url, waitUntil: load) {status } screenshot(type: jpeg) {base64 }}\",\n  \"variables\": {\n    \"url\": \"{{ $json.website }}\"\n  }\n} ",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2256,
        400
      ],
      "id": "2d235e35-3db8-415c-b733-de1bf14460ae",
      "name": "scrape website",
      "credentials": {
        "httpQueryAuth": {
          "id": "bK2c5PcRSMMzLFaC",
          "name": "browserless token"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1kGgxT5YwE7vE8yOHbpiJKzxvD0lGYS-Cq7g4mzeLwjY",
          "mode": "list",
          "cachedResultName": "ZTechAI",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1kGgxT5YwE7vE8yOHbpiJKzxvD0lGYS-Cq7g4mzeLwjY/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1891079129,
          "mode": "list",
          "cachedResultName": "Keyword Search",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1kGgxT5YwE7vE8yOHbpiJKzxvD0lGYS-Cq7g4mzeLwjY/edit#gid=1891079129"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -2032,
        880
      ],
      "id": "040a5928-6172-40bc-9264-0c874d50b268",
      "name": "Get row(s) in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "jwr2VJQX9ktvb4Sz",
          "name": "Zubair-1"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "91a987c9-1b29-455a-81c9-4c94d0cccdc8",
              "leftValue": "={{ $json['Keywords Search'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "4d3e2ad4-7520-4282-b6bb-06b3cbfe615e",
              "leftValue": "={{ $json.Status }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1808,
        880
      ],
      "id": "57ca0062-e0cc-4ee9-87aa-e1f41992f1d9",
      "name": "If"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -1584,
        880
      ],
      "id": "f5c18d17-ef28-46ac-8712-73f81326dc1b",
      "name": "Limit1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://production-sfo.browserless.io/chromium/bql",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"query\": \"mutation Screenshot($url: String!) { goto(url: $url, waitUntil: load) {status } screenshot(type: jpeg) {base64 }}\",\n  \"variables\": {\n    \"url\": \"{{ $json.website }}\"\n  }\n} ",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2256,
        176
      ],
      "id": "a5e4bb48-ef81-495e-8208-18d6b2dfacce",
      "name": "scrape website1",
      "credentials": {
        "httpQueryAuth": {
          "id": "bK2c5PcRSMMzLFaC",
          "name": "browserless token"
        }
      }
    },
    {
      "parameters": {
        "maxItems": 2
      },
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -464,
        880
      ],
      "id": "c517f0bb-4218-4987-bccd-72659b2e0a85",
      "name": "Limit2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.data }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You are a Website Scraping and Business Analysis Agent.  \n\nYou are provided with raw scraped data of a business website.  \nYour task is to extract, validate, and present the following business details in a clean, structured format  \n\n1. website  ( ensure it is in a correct format)\n2. Phone Number ( output Phone number in  the same international format country code-state code-number)\n3. Business Location \n4. type of business it deals with \n5. pricing details \n6. Check chatbot widget to handle customers already installed and respond as \"Yes\" or \"No\" \n7. Check appointment schedule setter is available in chatbot or on website or not, where customers can set appointments with the Business, respond as \"Yes\" or \"No\" \n8. get Email address of that business. \n9. Services They offer with their respective ricing e.g, Root canal, filling, dents removal, teeth whitening etc. \n10. Main field: main category of Business like, medical, restaturant, relief, real estate, Consultants ec. \n11.Perform an AI Audit of the websit and let me know which types of Modern AI Solutions they are adopting. for example, they installed chatbot which can act as a customer support agent, handle queries of customers, offer them with discounts if they are are applicable. do they have online appointment booking setup procedure etc."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        432,
        944
      ],
      "id": "092f5f50-a3be-4483-b862-0b7d505262f4",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "url": "={{ $json.website }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -16,
        864
      ],
      "id": "bd17e96b-e655-4cd6-9bdc-c07a3c59236f",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"Website\": \"https://www.citydentalclinic.com\",\n  \"Email Address\": \"info@citydentalclinic.com\",\n  \"Phone Number\": \"+1-202-555-0199\",\n  \"Business Location\": \"New York, NY, USA\",\n  \"Business Type\": \"Dental Clinic\",\n  \"Chatbot Installed\": \"Yes\",\n  \"Appointment Scheduling Available\": \"No\",\n  \"Services\": \"Root Canal, teech whitening, Teeth Replacement\",\n  \"Main Field\": \"Medical\",\n  \"AI Audit Findings\": \"Chatbot not available for FAQs,appointments are also available, There is no AI Tools which helps users to go through the services\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        608,
        1152
      ],
      "id": "262e49a3-7b96-4ddb-a7e4-c3b0e8e6e6de",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        288,
        1152
      ],
      "id": "4006dad1-629f-41c9-a28a-23d981fd9504",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "04L4BIAqVzDlgCrO",
          "name": "Gemini-4"
        }
      }
    }
  ],
  "connections": {
    "Wait": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Filter Out Empties",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract URLs": {
      "main": [
        [
          {
            "node": "Filter Google URLs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Duplicates": {
      "main": [
        [
          {
            "node": "Limit2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Google URLs": {
      "main": [
        [
          {
            "node": "Remove Duplicates",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Out Empties": {
      "main": [
        [
          {
            "node": "Remove Duplicates (2)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scrape Google Maps": {
      "main": [
        [
          {
            "node": "Extract URLs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Duplicates (2)": {
      "main": [
        [
          {
            "node": "Add to Sheet (or whatever you want!)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "scrape website": {
      "main": [
        []
      ]
    },
    "Get row(s) in sheet": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Limit1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit1": {
      "main": [
        [
          {
            "node": "Scrape Google Maps",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit2": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "scrape website1": {
      "main": [
        []
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "09951720-149f-4e61-a146-9275b2d73fc9",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-09-10T17:02:17.804Z",
      "updatedAt": "2025-09-10T17:02:17.804Z",
      "role": "workflow:owner",
      "workflowId": "gB8NWpoCuOW6kiCe",
      "projectId": "KyK2NGi92B9PeHQl"
    }
  ],
  "tags": [
    {
      "createdAt": "2025-09-10T17:04:58.587Z",
      "updatedAt": "2025-09-10T17:04:58.587Z",
      "id": "1lnZqEWBrKP3wUi2",
      "name": "Leads"
    }
  ]
}